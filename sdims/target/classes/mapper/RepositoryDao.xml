<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.lothar.sdims.dao.RepositoryDao">
	<!-- 返回类型定义 -->
	<resultMap type="top.lothar.sdims.entity.Repository" id="EmployeeMap">
		<id column="repo_id" property="repoId"/>
		<result column="name" property="name"/>
		<result column="code" property="code"/>
		<result column="address" property="address"/>
		<result column="repo_desc" property="repoDesc"/>
		<result column="updater" property="updater"/>
		<result column="update_time" property="updateTime"/>
		<!-- 外键 -->
		<association property="employee" javaType="top.lothar.sdims.entity.Employee" column="employee_id">
			<id column="employee_id" property="employeeId"/>
			<result column="be_name" property="name"/>
		</association>
	</resultMap>
	<!-- 添加仓库 -->
	<insert id="insertRepository" useGeneratedKeys="true"
		keyColumn="repo_id" keyProperty="repoId"
		parameterType="top.lothar.sdims.entity.Repository">
		INSERT
		INTO
		sd_base_repo(repo_id,name,code,address,repo_desc,updater,update_time,employee_id)
		VALUES(#{repoId},#{name},#{code},#{address},#{repoDesc},#{updater},#{updateTime},#{employee.employeeId})
	</insert>
 	<!-- 删除仓库 -->
 	<delete id="deleteRepositoryById" parameterType="long">
 		DELETE
 		FROM
 		sd_base_repo
 		WHERE
 		repo_id = #{repoId}
 	</delete>
 	<!-- 更新仓库 -->
 	<update id="updateRepository" parameterType="top.lothar.sdims.entity.Repository" keyProperty="repoId">
 		UPDATE
 		sd_base_repo
 		<set>
			<if test="name!=null">name=#{name},</if>
			<if test="code!=null">code=#{code},</if>
			<if test="address!=null">address=#{address},</if>
			<if test="repoDesc!=null">repo_desc=#{repoDesc},</if>
			<if test="updater!=null">updater=#{updater},</if>
			<if test="updateTime!=null">update_time=#{updateTime},</if>
			<if test="employee.employeeId!=null">employee_id=#{employee.employeeId}</if>
		</set>
		WHERE
		repo_id=#{repoId}
 	</update>
 	
 	<select id="queryRepositoryById" parameterType="Long" resultMap="EmployeeMap">
 		SELECT
 		br.repo_id,
 		br.name,
 		br.code,
 		br.address,
 		br.repo_desc,
 		br.updater,
 		br.update_time,
 		be.employee_id,
 		be.name "be_name"
 		FROM
 		sd_base_repo br,
 		sd_base_employee be
 		WHERE
 		br.repo_id=#{repoId}
 		AND
 		br.employee_id=be.employee_id
 	</select>
 	<!-- 查询仓库列表 -->
 	<select id="queryRepositoryList" resultMap="EmployeeMap">
 		SELECT
 		br.repo_id,
 		br.name,
 		br.code,
 		br.address,
 		br.repo_desc,
 		br.updater,
 		br.update_time,
 		be.employee_id,
 		be.name "be_name"
 		FROM
 		sd_base_repo br,
 		sd_base_employee be
 		<where>
 			<if test="repositoryName!=null">
 				and br.name=#{repositoryName}
 			</if>
 			AND
 			br.employee_id=be.employee_id
 		</where>
 		ORDER BY
		br.repo_id ASC
		LIMIT #{rowIndex},#{pageSize};
 	</select>
 	<!-- 查询数量 -->
 	<select id="queryRepositoryCount" resultType="int">
 		SELECT
 		COUNT(repo_id)
 		FROM
 		sd_base_repo
 		<where>
 			<if test="repositoryName!=null">
 				and name = #{repositoryName}
 			</if>
 		</where>
 	</select>
</mapper>